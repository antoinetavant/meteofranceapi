[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "meteofrance-publicapi"
description = "A wrapper of the portail-api.meteofrance.fr datasets"
authors = [
  { name="Antoine Tavant"},
]
readme = "README.md"
license = {file = 'LICENSE'}
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]
dependencies = [
    "pandas",
    "numpy",
    "scipy",
    "deprecation",
    "requests",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/antoinetavant/meteofranceapi"
"Bug Tracker" = "https://github.com/antoinetavant/meteofranceapi/issues"

[project.optional-dependencies]
doc = [
    "sphinx",
    "pydata-sphinx-theme",
    "sphinx_design",
]
test = [
    "pytest",
    "pytest-cov",
    "python-dotenv",
]
all = [
    "meteofranceapi[test,doc]"
]

[tool.setuptools]
zip-safe = false
[tool.setuptools.packages.find]
where = ["./"]
include = ["meteofrance_publicapi*"]

[tool.setuptools.dynamic]
version = {attr = "meteofrance_publicapi.__version__"}


[tool.ruff]
line-length = 88
target-version = "py310"
fix = true

[tool.ruff.lint]
unfixable = []
typing-modules = ["pandas._typing"]

select = [
  # pyflakes
  "F",
  # pycodestyle
  "E", "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # flake8-debugger
  "T10",
  # flake8-gettext
  "INT",
  # pylint
  "PL",
  # flake8-pytest-style
  "PT",
  # misc lints
  "PIE",
  # flake8-pyi
  "PYI",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
  # type-checking imports
  "TCH",
  # comprehensions
  "C4",
  # pygrep-hooks
  "PGH",
  # Ruff-specific rules
  "RUF",
  # flake8-bandit: exec-builtin
  "S102",
  # numpy-legacy-random
  "NPY002",
  # Perflint
  "PERF",
  # flynt
  "FLY",
  # flake8-logging-format
  "G",
  # flake8-future-annotations
  "FA",
]

ignore = [
  ### Intentionally disabled
  # module level import not at top of file
  "E402",
  # do not assign a lambda expression, use a def
  "E731",
  # controversial
  "B007",
  # controversial
  "B008",
  # setattr is used to side-step mypy
  "B009",
  # getattr is used to side-step mypy
  "B010",
  # tests use comparisons but not their returned value
  "B015",
  # Function definition does not bind loop variable
  "B023",
  # Only works with python >=3.10
  "B905",
  # Too many arguments to function call
  "PLR0913",
  # Too many returns
  "PLR0911",
  # Too many branches
  "PLR0912",
  # Too many statements
  "PLR0915",
  # Redefined loop name
  "PLW2901",
  # Global statements are discouraged
  "PLW0603",
  # Use `typing.NamedTuple` instead of `collections.namedtuple`
  "PYI024",
  # Use of possibly insecure function; consider using ast.literal_eval
  "S307",
  # while int | float can be shortened to float, the former is more explicit
  "PYI041",
  # incorrect-dict-iterator, flags valid Series.items usage
  "PERF102",
  # try-except-in-loop, becomes useless in Python 3.11
  "PERF203",
  # pytest-missing-fixture-name-underscore
  "PT004",
  # pytest-incorrect-fixture-name-underscore
  "PT005",
  # pytest-parametrize-names-wrong-type
  "PT006",
  # pytest-parametrize-values-wrong-type
  "PT007",
  # pytest-patch-with-lambda
  "PT008",
  # pytest-raises-with-multiple-statements
  "PT012",
  # pytest-assert-in-except
  "PT017",
  # pytest-composite-assertion
  "PT018",
  # pytest-fixture-param-without-value
  "PT019",
  # The following rules may cause conflicts when used with the formatter:
  "ISC001",
  # using f-string in logging
  "G004",
]
